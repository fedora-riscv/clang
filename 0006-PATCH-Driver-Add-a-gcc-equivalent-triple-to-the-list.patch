From 60f8d80b366186d0ca5a75afb6acff659d4c82c1 Mon Sep 17 00:00:00 2001
From: Tom Stellard <tstellar@redhat.com>
Date: Thu, 11 Nov 2021 10:58:14 +0100
Subject: [PATCH] Driver: Add a gcc equivalent triple to the list of triples to
 search

There are some gcc triples, like x86_64-redhat-linux, that provide the
same behavior as a clang triple with a similar name (e.g.
x86_64-redhat-linux-gnu). When searching for a gcc install, also search
for a gcc equivalent triple if one exists.

https://reviews.llvm.org/D111207
---
 clang/lib/Driver/ToolChains/Gnu.cpp | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/clang/lib/Driver/ToolChains/Gnu.cpp b/clang/lib/Driver/ToolChains/Gnu.cpp
index 6915857c424e..035ab5b338d2 100644
--- a/clang/lib/Driver/ToolChains/Gnu.cpp
+++ b/clang/lib/Driver/ToolChains/Gnu.cpp
@@ -1876,6 +1876,18 @@ static llvm::StringRef getGCCToolchainDir(const ArgList &Args,
   return GCC_INSTALL_PREFIX;
 }
 
+/// This function takes a 'clang' triple and converts it to an equivalent gcc
+/// triple.
+static const char *ConvertToGccTriple(StringRef CandidateTriple) {
+  return llvm::StringSwitch<const char *>(CandidateTriple)
+      .Case("aarch64-redhat-linux-gnu", "aarch64-redhat-linux")
+      .Case("i686-redhat-linux-gnu", "i686-redhat-linux")
+      .Case("ppc64le-redhat-linux-gnu", "ppc64le-redhat-linux")
+      .Case("s390x-redhat-linux-gnu", "s390x-redhat-linux")
+      .Case("x86_64-redhat-linux-gnu", "x86_64-redhat-linux")
+      .Default(NULL);
+}
+
 /// Initialize a GCCInstallationDetector from the driver.
 ///
 /// This performs all of the autodetection and sets up the various paths.
@@ -1896,6 +1908,16 @@ void Generic_GCC::GCCInstallationDetector::init(
   // The compatible GCC triples for this particular architecture.
   SmallVector<StringRef, 16> CandidateTripleAliases;
   SmallVector<StringRef, 16> CandidateBiarchTripleAliases;
+
+  // In some cases gcc uses a slightly different triple than clang for the
+  // same target.  Convert the clang triple to the gcc equivalent and use that
+  // to search for the gcc install.
+  const char *ConvertedTriple = ConvertToGccTriple(TargetTriple.str());
+  if (ConvertedTriple) {
+    CandidateTripleAliases.push_back(ConvertedTriple);
+    CandidateBiarchTripleAliases.push_back(ConvertedTriple);
+  }
+
   CollectLibDirsAndTriples(TargetTriple, BiarchVariantTriple, CandidateLibDirs,
                            CandidateTripleAliases, CandidateBiarchLibDirs,
                            CandidateBiarchTripleAliases);
-- 
2.34.1

